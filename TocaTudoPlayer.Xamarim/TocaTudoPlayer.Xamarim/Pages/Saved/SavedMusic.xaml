<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:controls="clr-namespace:MarcTron.Plugin.Controls;assembly=Plugin.MtAdmob"
             xmlns:local="clr-namespace:TocaTudoPlayer.Xamarim"
             xmlns:uc_local="clr-namespace:TocaTudoPlayer.Xamarim"
             xmlns:resource="clr-namespace:TocaTudoPlayer.Xamarim.Resources"
             x:Class="TocaTudoPlayer.Xamarim.Pages.SavedMusic"
             NavigationPage.HasNavigationBar="False"
             x:DataType="local:SavedMusicPageViewModel">
    <ContentPage.Content>
        <Grid RowSpacing="2">
            <Grid.Background>
                <LinearGradientBrush>
                    <GradientStop Color="#E7EDF8" Offset="0" />
                    <GradientStop Color="#E3E7EE" Offset="1" />
                </LinearGradientBrush>
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding IsInternetAvaiableGridSize}"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <uc_local:InternetConnControl Grid.Row="0"/>
            <ActivityIndicator x:Name="actInd" Grid.RowSpan="4" IsRunning="{Binding IsSearching}" IsVisible="{Binding IsSearching}" HorizontalOptions="CenterAndExpand" VerticalOptions="CenterAndExpand"/>
            <!--<Grid Grid.Row="0" RowSpacing="0" ColumnSpacing="0" Margin="2,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="{Binding CommonPageViewModel.AlbumPlayingGridSize}"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Entry x:Name="txtSearchName" Placeholder="música" HorizontalOptions="FillAndExpand"/>
                    <Button x:Name="txtSearchNameClear" IsVisible="false" HeightRequest="15" WidthRequest="15" VerticalOptions="Center" HorizontalOptions="End" Margin="0,0,7,0" Clicked="TxtSearchNameClear_Clicked">
                        <Button.ImageSource>
                            <FontImageSource FontFamily="FontAwesomeBold" Glyph="{x:Static local:Icon.TimesCircle}" Size="18" Color="#5C5C5C"/>
                        </Button.ImageSource>
                    </Button>
                </Grid>
            </Grid>-->
            <!--<Label Grid.Row="1" TextColor="Black" Text="Álbum" Opacity="0.5" Margin="2,0" FontSize="13"/>-->
            <Frame Grid.Row="1" CornerRadius="10" Padding="1" Margin="6,0,6,0" HeightRequest="38" IsVisible="{Binding SavedMusicAlbumIsVisible}" BorderColor="#f8f9fd">
                <StackLayout Orientation="Horizontal" Spacing="0">
                    <Picker x:Name="pkAlbumMusicSavedSelect" ItemsSource="{Binding AlbumMusicSavedSelectCollection}" TitleColor="Black" ItemDisplayBinding="{Binding Value}" SelectedItem="{Binding .}" Title="{x:Static resource:AppResource.PopupAlbumSelect}" FontSize="14" HorizontalOptions="FillAndExpand" SelectedIndexChanged="AlbumMusicSavedSelect_Clicked"/>
                    <Button Text="{x:Static resource:AppResource.AllTextLabel}" CornerRadius="5" Padding="5" Margin="2" HorizontalOptions="End" IsVisible="{Binding AllMusicsButtonIsVisible}" Command="{Binding AllMusicMusicCommand}">
                        <Button.ImageSource>
                            <FontImageSource FontFamily="FontAwesomeBold" Glyph="{x:Static local:Icon.Music}" Color="#7C97E3" Size="18"/>
                        </Button.ImageSource>
                    </Button>
                </StackLayout>
                <Frame.Background>
                    <LinearGradientBrush BindingContext="{Binding Source={RelativeSource AncestorType={x:Type Grid}}, Path=BindingContext}" StartPoint="0,1">
                        <GradientStop Color="#d7dff6" Offset="0" />
                        <GradientStop Color="#f5f7fa" Offset="1" />
                    </LinearGradientBrush>
                </Frame.Background>
            </Frame>
            <Frame Grid.Row="2" CornerRadius="10" Padding="1" Margin="5,0,5,0" BackgroundColor="Transparent">
                <ScrollView x:Name="savedMusicSV" HorizontalScrollBarVisibility="Never" VerticalScrollBarVisibility="Never">
                    <local:CustomCollectionView x:Name="musicPlaylist" ItemsSource="{Binding MusicPlaylist}" RowHeigt="50" ScrollView="savedMusicSV" SelectionMode="None">
                        <CollectionView.ItemsLayout>
                            <LinearItemsLayout Orientation="Vertical" ItemSpacing="1"/>
                        </CollectionView.ItemsLayout>
                        <CollectionView.EmptyView>
                            <StackLayout HorizontalOptions="CenterAndExpand" VerticalOptions="CenterAndExpand">
                                <Label Text="{x:Static resource:AppResource.MusicSavedEmptyRegister}" FontSize="14" HorizontalTextAlignment="Center" />
                            </StackLayout>
                        </CollectionView.EmptyView>
                        <CollectionView.ItemTemplate>
                            <DataTemplate>
                                <Grid ColumnSpacing="3" HeightRequest="55" IsClippedToBounds="True" x:DataType="local:SearchMusicModel" BackgroundColor="#F7F9FC">
                                    <Grid.Background>
                                        <LinearGradientBrush BindingContext="{Binding Source={RelativeSource AncestorType={x:Type Grid}}, Path=BindingContext}" StartPoint="0,1">
                                            <GradientStop Color="{Binding MusicSelectedColorPrimary}" Offset="0.5" />
                                            <GradientStop Color="{Binding MusicSelectedColorSecondary}" Offset="1.0" />
                                        </LinearGradientBrush>
                                    </Grid.Background>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="95"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <ActivityIndicator Grid.Column="0" WidthRequest="30" VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand" Color="White" IsRunning="{Binding IsBufferingMusic}" IsVisible="{Binding IsBufferingMusic}"/>
                                    <Image Grid.Column="0" Source="{Binding ImgMusic}" VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand" IsVisible="{Binding IsLoadded}"/>
                                    <Grid Grid.Column="1" Padding="2" ColumnSpacing="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Column="0" Grid.ColumnSpan="2" HorizontalOptions="FillAndExpand" VerticalOptions="StartAndExpand" Text="{Binding MusicName}" TextColor="{Binding TextColorMusic}" FontAttributes="{Binding MusicFontAttr}" FontSize="14" LineBreakMode="TailTruncation"/>
                                        <Label Grid.Column="0" HorizontalOptions="FillAndExpand" VerticalOptions="EndAndExpand" Text="{Binding MusicTime}" TextColor="{Binding TextColorMusic}" FontAttributes="{Binding MusicFontAttr}" FontSize="12" Opacity=".7" LineBreakMode="TailTruncation"/>
                                        <StackLayout Orientation="Horizontal" Grid.Column="1" Spacing="2" HorizontalOptions="EndAndExpand" Opacity=".5" VerticalOptions="EndAndExpand">
                                            <Image>
                                                <Image.Source>
                                                    <FontImageSource FontFamily="FontAwesomeBold" Glyph="{x:Static local:Icon.ArrowCircleDown}" Size="12" Color="{Binding TextColorMusic}"/>
                                                </Image.Source>
                                            </Image>
                                            <Label Text="Salvo!" TextColor="{Binding TextColorMusic}" FontSize="11"/>
                                        </StackLayout>
                                        <Button Grid.Column="1" HorizontalOptions="End" VerticalOptions="Center" WidthRequest="25" Clicked="ViewCellPlusSavedMusicPlaylist_Clicked" CommandParameter="{Binding .}" BackgroundColor="Transparent">
                                            <Button.ImageSource>
                                                <FontImageSource FontFamily="FontAwesomeBold" Color="{Binding TextColorMusic}" Size="20" Glyph="{x:Static local:Icon.EllipsisH}"/>
                                            </Button.ImageSource>
                                        </Button>
                                    </Grid>
                                    <Grid.GestureRecognizers>
                                        <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped" Command="{Binding Path=BindingContext.SelectMusicCommand, Source={x:Reference musicPlaylist}}" CommandParameter="{Binding .}"/>
                                    </Grid.GestureRecognizers>
                                </Grid>
                            </DataTemplate>
                        </CollectionView.ItemTemplate>
                    </local:CustomCollectionView>
                </ScrollView>
            </Frame>
            <StackLayout x:Name="stlBottom" Grid.Row="3">
                <Grid RowSpacing="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <controls:MTAdView x:Name="myAds" Grid.Column="0" Grid.Row="0"/>
                    <uc_local:MusicBottomPlayerControl x:Name="ucPlayerControl" Grid.Row="1"/>
                </Grid>
            </StackLayout>
        </Grid>
    </ContentPage.Content>
</ContentPage>