<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:sh="http://sharpnado.com"
             xmlns:dotMorten="clr-namespace:dotMorten.Xamarin.Forms;assembly=dotMorten.Xamarin.Forms.AutoSuggestBox"
             xmlns:controls="clr-namespace:MarcTron.Plugin.Controls;assembly=Plugin.MtAdmob"
             xmlns:uc_local="clr-namespace:TocaTudoPlayer.Xamarim"
             xmlns:local="clr-namespace:TocaTudoPlayer.Xamarim" 
             xmlns:resource="clr-namespace:TocaTudoPlayer.Xamarim.Resources"
             x:Class="TocaTudoPlayer.Xamarim.Pages.Music"
             x:DataType="local:MusicPageViewModel"
             Title="TocaTudo - Música">
    <ContentPage.Content>
        <Grid RowSpacing="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding IsInternetAvaiableGridSize}"/>
                <RowDefinition Height="{Binding CommonPageViewModel.FormDownloadViewModel.FormDownloadSize}"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <uc_local:InternetConnControl Grid.Row="0" Margin="5,2,5,-2"/>
            <uc_local:DownloadingFormControl Grid.Row="1" BindingContext="{Binding CommonPageViewModel.FormDownloadViewModel}"/>
            <Grid x:Name="gMusicPlaylist" Grid.Row="2" RowSpacing="2" Margin="6,0,6,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <sh:Shadows Grid.Row="0" CornerRadius="20" Shades="{sh:SingleShade Offset='0,4', Opacity=0.7, Color='#999999'}">
                    <Frame Padding="0" CornerRadius="18" HasShadow="False" IsClippedToBounds="true">
                        <StackLayout Orientation="Horizontal" HorizontalOptions="FillAndExpand">
                            <dotMorten:AutoSuggestBox x:Name="txtSearchName" Text="{Binding MusicSearchedName}" Margin="4,-2" TextColor="#5C5C5C" TextChanged="TxtSearchName_TextChanged" QuerySubmitted="TxtSearchName_QuerySubmitted" HorizontalOptions="FillAndExpand">
                                <dotMorten:AutoSuggestBox.Effects>
                                    <local:PlainEntry/>
                                </dotMorten:AutoSuggestBox.Effects>
                            </dotMorten:AutoSuggestBox>
                            <Button x:Name="txtSearchNameClear" IsVisible="false" HeightRequest="15" WidthRequest="15" VerticalOptions="Center" HorizontalOptions="End" Margin="0,0,7,0" Clicked="TxtSearchNameClear_Clicked">
                                <Button.ImageSource>
                                    <FontImageSource FontFamily="FontAwesomeBold" Glyph="{x:Static local:Icon.TimesCircle}" Size="18" Color="#5C5C5C"/>
                                </Button.ImageSource>
                            </Button>
                            <Button x:Name="btnSearch" CornerRadius="50" WidthRequest="40" HorizontalOptions="End" Margin="0" IsVisible="{Binding IsReady}" Clicked="BtnSearch_Clicked" BorderColor="#a5b2c5" BorderWidth="1.5">
                                <Button.Background>
                                    <LinearGradientBrush>
                                        <GradientStop Color="#bdcbf1" Offset="0" />
                                        <GradientStop Color="#f5f7fa" Offset="1" />
                                    </LinearGradientBrush>
                                </Button.Background>
                                <Button.ImageSource>
                                    <FontImageSource FontFamily="FontAwesomeBold" Glyph="{x:Static local:Icon.Search}" Size="14" Color="Black"/>
                                </Button.ImageSource>
                            </Button>
                            <ActivityIndicator x:Name="actInd" WidthRequest="40" HorizontalOptions="End" IsRunning="{Binding IsSearching}" Color="#4987E5" IsVisible="{Binding IsSearching}"/>
                        </StackLayout>
                    </Frame>
                </sh:Shadows>
                <!--<sh:Shadows Grid.Row="0" CornerRadius="10" Shades="{sh:SingleShade Offset='0, 4', Opacity=0.7, Color='#999999'}">-->
                <!--<Frame Grid.Row="0" CornerRadius="10" Padding="2">-->
                <ScrollView Grid.Row="1" x:Name="musicSV" HorizontalScrollBarVisibility="Never" VerticalScrollBarVisibility="Never">
                    <Grid RowSpacing="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{Binding MusicPlayedHistoryViewModel.PlayedHistoryCollectionSize}"/>
                            <RowDefinition Height="{Binding MusicPlayedHistoryViewModel.PlayedHistoryPlayerFormSize}"/>
                            <RowDefinition Height="{Binding AlbumMusicSavedFormSize}"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <sh:Shadows Grid.Row="0" CornerRadius="10" Shades="{sh:SingleShade Offset='0, 4', Opacity=0.7, Color='#999999'}">
                            <Frame CornerRadius="10" Padding="3" >
                                <Grid RowSpacing="2">
                                    <local:AnimationCollectionView x:Name="cvMusicPlayedHistory" ItemsSource="{Binding MusicPlayedHistoryViewModel.PlayedHistory}" IsVisible="{Binding MusicPlayedHistoryViewModel.PlayedHistoryIsVisible}">
                                        <local:AnimationCollectionView.ItemsLayout>
                                            <GridItemsLayout Orientation="Horizontal" Span="{Binding MusicPlayedHistoryViewModel.PlayedHistoryCollectionTotalItens}" HorizontalItemSpacing="1" VerticalItemSpacing="1"/>
                                        </local:AnimationCollectionView.ItemsLayout>
                                        <local:AnimationCollectionView.ItemTemplate>
                                            <DataTemplate>
                                                <Frame HasShadow="false" CornerRadius="5" Padding="0" BorderColor="#C3D3E7">
                                                    <Grid RowSpacing="2" x:DataType="local:UserMusicPlayedHistory">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="20"/>
                                                        </Grid.RowDefinitions>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="150"/>
                                                            <ColumnDefinition Width="90"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.Background>
                                                            <LinearGradientBrush BindingContext="{Binding Source={RelativeSource AncestorType={x:Type Grid}}, Path=BindingContext}" StartPoint="0,1">
                                                                <GradientStop Color="{Binding MusicSelectedColorPrimary}" Offset="0.5" />
                                                                <GradientStop Color="{Binding MusicSelectedColorSecondary}" Offset="1.0" />
                                                            </LinearGradientBrush>
                                                        </Grid.Background>
                                                        <Image Source="{Binding ImgMusic}" Grid.RowSpan="2" Grid.ColumnSpan="2" Aspect="AspectFill"/>
                                                        <Label Text="{Binding MusicName}" Grid.Row="1" Margin="2,-2" Grid.Column="0" Grid.ColumnSpan="2" FontSize="13" TextColor="White" FontAttributes="Bold"  VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand" LineBreakMode="TailTruncation"/>
                                                        <sh:Shadows Grid.Column="1" Grid.RowSpan="2" CornerRadius="20" HorizontalOptions="EndAndExpand" VerticalOptions="CenterAndExpand" Margin="0,0,4,0" Shades="{sh:SingleShade Offset='0, 4', Opacity=0.7, Color=White}">
                                                            <Button WidthRequest="25" HeightRequest="25" CornerRadius="20" Clicked="SelectHistoryRecentlyPlayed_Clicked" Command="{Binding Path=BindingContext.MusicHistoryFormCommand, Source={x:Reference gMusicPlaylist}}" CommandParameter="{Binding .}">
                                                                <Button.Background>
                                                                    <LinearGradientBrush>
                                                                        <GradientStop Color="White" Offset="0.5" />
                                                                        <GradientStop Color="WhiteSmoke" Offset="1.0" />
                                                                    </LinearGradientBrush>
                                                                </Button.Background>
                                                                <Button.ImageSource>
                                                                    <FontImageSource FontFamily="FontAwesomeBold" Glyph="{x:Static local:Icon.ArrowRight}" Size="12" Color="Black"/>
                                                                </Button.ImageSource>
                                                            </Button>
                                                        </sh:Shadows>
                                                        <Image Margin="4" Grid.RowSpan="2" WidthRequest="18" Opacity=".5" HorizontalOptions="StartAndExpand" VerticalOptions="CenterAndExpand" IsVisible="{Binding IsSavedOnLocalDb}" >
                                                            <Image.Source>
                                                                <FontImageSource FontFamily="FontAwesomeBold" Glyph="{x:Static local:Icon.ArrowCircleDown}" Size="30"  Color="PapayaWhip"/>
                                                            </Image.Source>
                                                        </Image>
                                                    </Grid>
                                                </Frame>
                                            </DataTemplate>
                                        </local:AnimationCollectionView.ItemTemplate>
                                    </local:AnimationCollectionView>
                                </Grid>
                            </Frame>
                        </sh:Shadows>
                        <Frame x:Name="frmPlayedHistory" Grid.Row="1" Padding="0" CornerRadius="5" Margin="2,0,0,2" IsClippedToBounds="true">
                            <Frame.Background>
                                <LinearGradientBrush BindingContext="{Binding Source={RelativeSource AncestorType={x:Type Frame}}, Path=BindingContext}" StartPoint="0,1">
                                    <GradientStop Color="#D4420C" Offset="0.5" />
                                    <GradientStop Color="#F3A283" Offset="1.0" />
                                </LinearGradientBrush>
                            </Frame.Background>
                            <Grid ColumnSpacing="3" RowSpacing="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <ActivityIndicator Grid.Column="0" Color="White" WidthRequest="30" Margin="2,0" IsRunning="{Binding MusicPlayedHistoryViewModel.HistoryMusicPlayingNow.IsBufferingMusic}" IsVisible="{Binding MusicPlayedHistoryViewModel.HistoryMusicPlayingNow.IsBufferingMusic}"/>
                                <Image Grid.Column="0" VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand" Source="{Binding MusicPlayedHistoryViewModel.HistoryMusicPlayingNow.ImgMusic}" IsVisible="{Binding MusicPlayedHistoryViewModel.HistoryMusicPlayingNow.IsLoadded}"/>
                                <Grid Grid.Column="1" Margin="2, 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="30"/>
                                    </Grid.ColumnDefinitions>
                                    <Label x:Name="lblPlayedHistorySelected" Grid.Column="0" HorizontalTextAlignment="Start" VerticalTextAlignment="Center" Text="{Binding MusicPlayedHistoryViewModel.HistoryMusicPlayingNow.MusicName}" IsVisible="{Binding MusicPlayedHistoryViewModel.HistoryMusicPlayingNow.MusicAlbumPopupModel.MusicNameIsVisible}" TextColor="White" FontAttributes="Bold" FontSize="13" LineBreakMode="TailTruncation"/>
                                    <Label Text="{Binding MusicPlayedHistoryViewModel.HistoryMusicPlayingNow.Download.PercentDesc}" IsVisible="{Binding MusicPlayedHistoryViewModel.HistoryMusicPlayingNow.MusicAlbumPopupModel.IsDownloadModelVisible}" VerticalOptions="StartAndExpand" HorizontalOptions="EndAndExpand" Margin="0,-2" Grid.ColumnSpan="2" TextColor="White" FontSize="11"/>
                                    <local:DownloadModeFormControl VerticalOptions="StartAndExpand" HorizontalOptions="EndAndExpand" Margin="0,-2" BindingContext="{Binding MusicPlayedHistoryViewModel.HistoryMusicPlayingNow}" Grid.ColumnSpan="2"/>
                                    <Label x:Name="lblPlayedAlbumModeHistorySelected" Grid.Column="0" HorizontalTextAlignment="Start" VerticalTextAlignment="Center" Text="{Binding MusicPlayedHistoryViewModel.HistoryMusicPlayingNow.MusicName}" TextColor="White" FontAttributes="Bold" FontSize="13" LineBreakMode="TailTruncation" IsVisible="{Binding MusicPlayedHistoryViewModel.HistoryMusicPlayingNow.MusicAlbumPopupModel.AlbumModeIsVisible}"/>
                                    <Button Grid.Column="1" HorizontalOptions="End" VerticalOptions="Center" WidthRequest="25" Clicked="ViewCellPlusMusicPlaylist_Clicked" CommandParameter="{Binding MusicPlayedHistoryViewModel.HistoryMusicPlayingNow}" BackgroundColor="Transparent">
                                        <Button.ImageSource>
                                            <FontImageSource FontFamily="FontAwesomeBold" Color="White" Size="20" Glyph="{x:Static local:Icon.EllipsisH}"/>
                                        </Button.ImageSource>
                                    </Button>
                                </Grid>
                            </Grid>
                        </Frame>
                        <Frame Grid.Row="2" CornerRadius="10" Padding="1" Margin="2,0,0,2" BorderColor="#f8f9fd">
                            <StackLayout Orientation="Horizontal" Spacing="0">
                                <Picker x:Name="pkAlbumMusicSavedSelect" ItemsSource="{Binding CommonMusicPageViewModel.AlbumMusicSavedSelectCollection}" HorizontalOptions="FillAndExpand" FontSize="12" TitleColor="Black" ItemDisplayBinding="{Binding Value}" SelectedItem="{Binding AlbumMusicSavedSelected}" Title="{x:Static resource:AppResource.PopupAlbumSelect}" SelectedIndexChanged="AlbumMusicSavedSelect_Clicked"/>                                                                
                                <Button Text="{x:Static resource:AppResource.ConfigurationSmallLabel}" CornerRadius="5" Padding="5" HorizontalOptions="End" Margin="2" Clicked="AlbumMusicConfigButton_Clicked">
                                    <Button.ImageSource>
                                        <FontImageSource FontFamily="FontAwesomeBold" Glyph="{x:Static local:Icon.Cog}" Size="18"/>
                                    </Button.ImageSource>
                                </Button>
                            </StackLayout>
                            <Frame.Background>
                                <LinearGradientBrush BindingContext="{Binding Source={RelativeSource AncestorType={x:Type Grid}}, Path=BindingContext}" StartPoint="0,1">
                                    <GradientStop Color="#d7dff6" Offset="0" />
                                    <GradientStop Color="#f5f7fa" Offset="1" />
                                </LinearGradientBrush>
                            </Frame.Background>
                        </Frame>
                        <Frame Grid.Row="3" CornerRadius="10" Padding="0" IsVisible="{Binding PlaylistIsVisible}" BackgroundColor="Transparent">
                            <local:CustomCollectionView x:Name="musicPlaylist" ItemsSource="{Binding MusicPlaylist}" RowHeigt="40" ScrollView="musicSV" SelectionMode="None">
                                <CollectionView.ItemsLayout>
                                    <LinearItemsLayout Orientation="Vertical" ItemSpacing="1.5"/>
                                </CollectionView.ItemsLayout>
                                <CollectionView.ItemTemplate>
                                    <DataTemplate x:DataType="local:SearchMusicModel">
                                        <Grid ColumnSpacing="3" HeightRequest="55" BackgroundColor="#F7F9FC">
                                            <Grid.Background>
                                                <LinearGradientBrush BindingContext="{Binding Source={RelativeSource AncestorType={x:Type Grid}}, Path=BindingContext}" StartPoint="0,1">
                                                    <GradientStop Color="{Binding MusicSelectedColorPrimary}" Offset="0.5" />
                                                    <GradientStop Color="{Binding MusicSelectedColorSecondary}" Offset="1.0" />
                                                </LinearGradientBrush>
                                            </Grid.Background>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="95"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ActivityIndicator Grid.Column="0" x:Name="searchingMusic" WidthRequest="30" VerticalOptions="Center" HorizontalOptions="Center" Color="White" IsRunning="{Binding IsBufferingMusic}" IsVisible="{Binding IsBufferingMusic}"/>
                                            <Image Grid.Column="0" VerticalOptions="Fill" HorizontalOptions="Fill" Source="{Binding MusicImageUrl}" IsVisible="{Binding IsLoadded}"/>
                                            <Image Grid.Column="0" VerticalOptions="Fill" HorizontalOptions="Fill" Source="{Binding ImgMusic}" IsVisible="{Binding IsLoadded}"/>
                                            <Grid Grid.Column="1" Padding="2" ColumnSpacing="0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Label Grid.Column="0" Grid.ColumnSpan="2" HorizontalOptions="FillAndExpand" VerticalOptions="Start" Text="{Binding MusicName}" TextColor="{Binding TextColorMusic}" FontAttributes="{Binding MusicFontAttr}" IsVisible="{Binding MusicAlbumPopupModel.MusicNameIsVisible}" FontSize="14" LineBreakMode="TailTruncation"/>
                                                <Label Grid.Column="0" HorizontalOptions="Fill" VerticalOptions="End" Text="{Binding MusicTime}" TextColor="{Binding TextColorMusic}" FontAttributes="{Binding MusicFontAttr}" FontSize="12" Opacity=".7" LineBreakMode="TailTruncation"/>
                                                <!--<StackLayout Orientation="Horizontal" Grid.Column="1" Margin="0,-3" Spacing="2" HorizontalOptions="StartAndExpand" VerticalOptions="EndAndExpand" IsVisible="{Binding MusicAlbumPopupModel.IsDownloadModelVisible}">
                                                    <Label Text="{Binding Download.PercentDesc}" TextColor="{Binding TextColorMusic}" FontSize="11"/>
                                                </StackLayout>-->
                                                <Label Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding MusicName}" TextColor="{Binding TextColorMusic}" HorizontalOptions="FillAndExpand" FontAttributes="{Binding MusicFontAttr}" FontSize="13" LineBreakMode="TailTruncation" IsVisible="{Binding MusicAlbumPopupModel.AlbumModeIsVisible}"/>
                                                <local:DownloadModeFormControl Grid.Column="1" HorizontalOptions="EndAndExpand" VerticalOptions="EndAndExpand"/>
                                                <Button Grid.Column="1" HorizontalOptions="End" VerticalOptions="Center" WidthRequest="25" Clicked="ViewCellPlusMusicPlaylist_Clicked" CommandParameter="{Binding .}" BackgroundColor="Transparent">
                                                    <Button.ImageSource>
                                                        <FontImageSource FontFamily="FontAwesomeBold" Color="{Binding TextColorMusic}" Size="20" Glyph="{x:Static local:Icon.EllipsisH}"/>
                                                    </Button.ImageSource>
                                                </Button>
                                            </Grid>
                                            <Grid.GestureRecognizers>
                                                <TapGestureRecognizer Tapped="ViewCellPlayMusic_Tapped" CommandParameter="{Binding .}"/>
                                            </Grid.GestureRecognizers>
                                        </Grid>
                                    </DataTemplate>
                                </CollectionView.ItemTemplate>
                            </local:CustomCollectionView>
                        </Frame>
                    </Grid>
                </ScrollView>
            </Grid>
            <StackLayout x:Name="stlBottom" Grid.Row="3" VerticalOptions="EndAndExpand">
                <Grid RowSpacing="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <controls:MTAdView x:Name="myAds" Grid.Row="0"/>
                    <uc_local:MusicBottomPlayerControl x:Name="ucPlayerControl" Grid.Row="1"/>
                </Grid>
            </StackLayout>
        </Grid>
    </ContentPage.Content>
</ContentPage>