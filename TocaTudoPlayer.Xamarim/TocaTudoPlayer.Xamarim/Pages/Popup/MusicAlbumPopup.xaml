<?xml version="1.0" encoding="utf-8" ?>
<xct:Popup xmlns:xct="http://xamarin.com/schemas/2020/toolkit" 
           xmlns="http://xamarin.com/schemas/2014/forms"
           xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
           xmlns:local="clr-namespace:TocaTudoPlayer.Xamarim" 
           xmlns:resource="clr-namespace:TocaTudoPlayer.Xamarim.Resources"
           Size="350, 70"
           x:Class="TocaTudoPlayer.Xamarim.Pages.MusicAlbumPopup"
           VerticalOptions="CenterAndExpand"
           HorizontalOptions="CenterAndExpand"
           x:Name="musicPopup">
    <Grid RowSpacing="0" Padding="5" x:DataType="local:MusicAlbumDialogModel">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" RowSpacing="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="22"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Text="{Binding MusicModel.MusicName}" Grid.Row="0" FontAttributes="Bold" TextColor="Black" LineBreakMode="TailTruncation"/>
        </Grid>
        <Grid Grid.Row="1" ColumnSpacing="0" IsVisible="{Binding MusicModel.MusicAlbumPopupModel.NormalModeIsVisible}">
            <StackLayout Orientation="Horizontal" Spacing="0">
                <Button HorizontalOptions="FillAndExpand" Text="{x:Static resource:AppResource.MusicAlbumButton}" ContentLayout="Left,10" Clicked="ViewCellPlusMusicPlaylistAddAlbum_Clicked" FontAttributes="{Binding MusicModel.MusicAlbumPopupModel.AddAlbumFontAttr}" ImageSource="{Binding MusicModel.MusicAlbumPopupModel.AddAlbumIcon}" CommandParameter="{Binding MusicModel.MusicAlbumPopupModel}"/>
                <Button HorizontalOptions="FillAndExpand" Text="Download" ContentLayout="Left,10" Clicked="ViewCellPlusMusicPlaylistDownloadMusicForm_Clicked" CommandParameter="{Binding MusicModel.MusicAlbumPopupModel}" IsEnabled="{Binding MusicModel.Download.IsDownloadEventEnabled}">
                    <Button.ImageSource>
                        <FontImageSource FontFamily="FontAwesomeBold" Glyph="{x:Static local:Icon.ArrowDown}" Size="18" Color="#D4420C"/>
                    </Button.ImageSource>
                </Button>
                <Button IsVisible="{Binding MusicModel.IsSavedOnLocalDb}" HorizontalOptions="End" VerticalOptions="CenterAndExpand" Clicked="ViewCellPlusMusicSetupPopup_Clicked" CommandParameter="{Binding MusicModel}" WidthRequest="40" HeightRequest="40" CornerRadius="20" BackgroundColor="Transparent">
                    <Button.ImageSource>
                        <FontImageSource FontFamily="FontAwesomeBold" Glyph="{x:Static local:Icon.EllipsisH}" Size="18" Color="#D4420C"/>
                    </Button.ImageSource>
                </Button>
            </StackLayout>
        </Grid>
        <Grid Grid.Row="1" IsVisible="{Binding MusicModel.MusicAlbumPopupModel.AlbumModeIsVisible}">
            <StackLayout Orientation="Horizontal">
                <Label Text="{x:Static local:Icon.FileImageO}" TextColor="#D4420C" VerticalTextAlignment="Center" FontAttributes="Bold" FontFamily="FontAwesomeBold"  FontSize="18" LineBreakMode="TailTruncation"/>
                <Label Text="{x:Static resource:AppResource.PopupMusicSavedInAlbum}" TextColor="Black" VerticalTextAlignment="Center" FontAttributes="Bold" FontSize="12" LineBreakMode="TailTruncation"/>
                <Label Text="{Binding MusicModel.MusicAlbumPopupModel.AlbumMusicSavedSelected.Value}" TextColor="Black" VerticalTextAlignment="Center" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" FontSize="13" LineBreakMode="TailTruncation"/>
            </StackLayout>
        </Grid>
        <Grid Grid.Row="2" ColumnSpacing="0" IsVisible="{Binding MusicModel.MusicAlbumPopupModel.AlbumModeIsVisible}" VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand" HeightRequest="40">
            <StackLayout Orientation="Horizontal" Spacing="0">
                <Button Text="{x:Static resource:AppResource.PopupMusicEdit}" HorizontalOptions="FillAndExpand" Clicked="ViewCellPlusMusicPlaylistEditAlbum_Clicked" CommandParameter="{Binding MusicModel.MusicAlbumPopupModel}">
                    <Button.ImageSource>
                        <FontImageSource FontFamily="FontAwesomeBold" Glyph="{x:Static local:Icon.PencilSquareO}" Size="18" Color="#D4420C"/>
                    </Button.ImageSource>
                </Button>
                <Button Text="Download" HorizontalOptions="FillAndExpand" Clicked="ViewCellPlusMusicPlaylistDownloadMusicForm_Clicked" CommandParameter="{Binding MusicModel.MusicAlbumPopupModel}" IsEnabled="{Binding MusicModel.Download.IsDownloadEventEnabled}">
                    <Button.ImageSource>
                        <FontImageSource FontFamily="FontAwesomeBold" Glyph="{x:Static local:Icon.ArrowDown}" Size="22" Color="#D4420C"/>
                    </Button.ImageSource>
                </Button>
                <Button HorizontalOptions="End" VerticalOptions="CenterAndExpand" Clicked="ViewCellPlusMusicSetupPopup_Clicked" CommandParameter="{Binding MusicModel}" WidthRequest="40" HeightRequest="40" CornerRadius="20" BackgroundColor="Transparent">
                    <Button.ImageSource>
                        <FontImageSource FontFamily="FontAwesomeBold" Glyph="{x:Static local:Icon.EllipsisH}" Size="18" Color="#D4420C"/>
                    </Button.ImageSource>
                </Button>
            </StackLayout>
        </Grid>
        
        <Grid Grid.Row="1" IsVisible="{Binding MusicModel.MusicAlbumPopupModel.SavedAlbumModeIsVisible}">
            <StackLayout Orientation="Horizontal">
                <Label Text="{x:Static local:Icon.FileImageO}" TextColor="#D4420C" VerticalTextAlignment="Center" FontAttributes="Bold" FontFamily="FontAwesomeBold"  FontSize="18" LineBreakMode="TailTruncation"/>
                <Label Text="{x:Static resource:AppResource.PopupMusicSavedInAlbum}" TextColor="Black" VerticalTextAlignment="Center" FontAttributes="Bold" FontSize="12"/>
                <Label Text="{Binding MusicModel.MusicAlbumPopupModel.AlbumMusicSavedSelected.Value}" TextColor="Black" VerticalTextAlignment="Center" FontSize="13" LineBreakMode="TailTruncation"/>
            </StackLayout>
        </Grid>
        <Grid Grid.Row="2" ColumnSpacing="0" IsVisible="{Binding MusicModel.MusicAlbumPopupModel.SavedAlbumModeIsVisible}" VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand" HeightRequest="40">
            <StackLayout Orientation="Horizontal" Spacing="0">
                <Button Text="{x:Static resource:AppResource.PopupMusicEdit}" HorizontalOptions="FillAndExpand" Clicked="ViewCellPlusMusicPlaylistEditAlbum_Clicked" CommandParameter="{Binding MusicModel.MusicAlbumPopupModel}">
                    <Button.ImageSource>
                        <FontImageSource FontFamily="FontAwesomeBold" Glyph="{x:Static local:Icon.PencilSquareO}" Size="18" Color="#D4420C"/>
                    </Button.ImageSource>
                </Button>
                <Button Text="Download" HorizontalOptions="FillAndExpand" Clicked="ViewCellPlusMusicPlaylistDownloadMusicForm_Clicked" CommandParameter="{Binding MusicModel.MusicAlbumPopupModel}" IsEnabled="{Binding MusicModel.Download.IsDownloadEventEnabled}">
                    <Button.ImageSource>
                        <FontImageSource FontFamily="FontAwesomeBold" Glyph="{x:Static local:Icon.ArrowDown}" Size="22" Color="#D4420C"/>
                    </Button.ImageSource>
                </Button>
                <Button HorizontalOptions="End" VerticalOptions="CenterAndExpand" Clicked="ViewCellPlusMusicSetupPopup_Clicked" CommandParameter="{Binding MusicModel}" WidthRequest="40" HeightRequest="40" CornerRadius="20" BackgroundColor="Transparent">
                    <Button.ImageSource>
                        <FontImageSource FontFamily="FontAwesomeBold" Glyph="{x:Static local:Icon.EllipsisH}" Size="18" Color="#D4420C"/>
                    </Button.ImageSource>
                </Button>
            </StackLayout>
        </Grid>
        
        <Grid Grid.Row="2" IsVisible="{Binding MusicModel.MusicAlbumPopupModel.NewAlbumIsVisible}" VerticalOptions="EndAndExpand">
            <StackLayout Orientation="Horizontal">
                <Entry x:Name="txtAlbumNameNovo" Placeholder="{x:Static resource:AppResource.PopupAlbumNameLabel}" VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand"/>
                <ImageButton HorizontalOptions="End" VerticalOptions="CenterAndExpand" Clicked="ViewCellPlusMusicPlaylistNewAlbumName_Clicked" CommandParameter="{Binding MusicModel}">
                    <ImageButton.Source>
                        <FontImageSource FontFamily="FontAwesomeBold" Glyph="{x:Static local:Icon.PlusCircle}" Size="40" Color="Black"/>
                    </ImageButton.Source>
                </ImageButton>
            </StackLayout>
        </Grid>
        <Grid Grid.Row="2" IsVisible="{Binding MusicModel.MusicAlbumPopupModel.FormAlbumIsVisible}" HeightRequest="40" VerticalOptions="EndAndExpand">
            <StackLayout Orientation="Horizontal" IsVisible="{Binding MusicModel.MusicAlbumPopupModel.SelectAlbumIsVisible}" Spacing="2">
                <Picker x:Name="pickerAlbum" Title="{x:Static resource:AppResource.PopupAlbumSelect}" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" FontSize="14" ItemsSource="{Binding AlbumMusicSavedCollection}" ItemDisplayBinding="{Binding Value}" SelectedItem="{Binding MusicModel.MusicAlbumPopupModel.AlbumMusicSavedSelected}"/>
                <Button Text="{x:Static resource:AppResource.PopupMusicSave}" HorizontalOptions="Center" VerticalOptions="Center" Clicked="ViewCellPlusMusicPlaylistUpdateAlbumName_Clicked" CommandParameter="{Binding MusicModel}"/>
                <Button Text="{x:Static resource:AppResource.MusicAlbumButton}" HorizontalOptions="Center" VerticalOptions="Center" Clicked="ViewCellPlusMusicPlaylistAddAlbumName_Clicked" CommandParameter="{Binding MusicModel.MusicAlbumPopupModel}">
                    <Button.ImageSource>
                        <FontImageSource FontFamily="FontAwesomeBold" Glyph="{x:Static local:Icon.Plus}" Size="15" Color="Black"/>
                    </Button.ImageSource>
                </Button>
            </StackLayout>
            <StackLayout Orientation="Horizontal" IsVisible="{Binding MusicModel.MusicAlbumPopupModel.AddAlbumIsVisible}" VerticalOptions="EndAndExpand">
                <Entry x:Name="txtAlbumName" Placeholder="{x:Static resource:AppResource.PopupAlbumNameLabel}" HorizontalOptions="FillAndExpand"/>
                <ImageButton HorizontalOptions="End" VerticalOptions="CenterAndExpand" WidthRequest="35" Clicked="ViewCellPlusMusicPlaylistNewAlbumName_Clicked" CommandParameter="{Binding MusicModel}">
                    <ImageButton.Source>
                        <FontImageSource FontFamily="FontAwesomeBold" Glyph="{x:Static local:Icon.PlusCircle}" Size="40" Color="Black"/>
                    </ImageButton.Source>
                </ImageButton>
                <ImageButton HorizontalOptions="End" VerticalOptions="Center" HeightRequest="35" CornerRadius="100" Clicked="ViewCellPlusMusicPlaylistSelectAlbumBack_Clicked" CommandParameter="{Binding MusicModel.MusicAlbumPopupModel}" BackgroundColor="Transparent">
                    <ImageButton.Source>
                        <FontImageSource FontFamily="FontAwesomeBold" Glyph="{x:Static local:Icon.Undo}" Size="40" Color="Black"/>
                    </ImageButton.Source>
                </ImageButton>
            </StackLayout>
        </Grid>
        <Grid x:Name="grdDownload" Grid.Row="2" IsVisible="{Binding MusicModel.MusicAlbumPopupModel.FormDownloadIsVisible}" ColumnSpacing="2" HeightRequest="40" VerticalOptions="CenterAndExpand">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button Text="{x:Static resource:AppResource.PopupMusicStart}"  HorizontalOptions="Start" Grid.Row="0" Grid.Column="0" CommandParameter="{Binding MusicModel}" IsEnabled="{Binding MusicModel.Download.IsDownloadEventEnabled}" Clicked="ViewCellPlusMusicPlaylistDownloadMusic_Clicked"/>
            <Grid Grid.Column="1" VerticalOptions="CenterAndExpand">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="2"/>
                </Grid.RowDefinitions>
                <Label Text="{Binding MusicModel.Download.PercentDesc}" Grid.Row="0"/>
                <ProgressBar Grid.Row="1" HorizontalOptions="FillAndExpand" VerticalOptions="CenterAndExpand" local:AttachedProperties.AnimatedProgress="{Binding MusicModel.Download.Progress}"/>
            </Grid>
        </Grid>
        <Grid Grid.Row="3" IsVisible="{Binding MusicModel.MusicAlbumPopupModel.EditFormIsVisible}" VerticalOptions="StartAndExpand" HeightRequest="40">
            <StackLayout Orientation="Horizontal" Spacing="2" HeightRequest="40">
                <Picker Title="{x:Static resource:AppResource.PopupAlbumSelect}" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand"  FontSize="14" ItemsSource="{Binding AlbumMusicSavedCollection}" ItemDisplayBinding="{Binding Value}" SelectedItem="{Binding MusicModel.MusicAlbumPopupModel.AlbumMusicSavedSelected}"/>
                <Button Text="{x:Static resource:AppResource.PopupMusicSave}" HorizontalOptions="Center" VerticalOptions="Center" Clicked="ViewCellPlusMusicPlaylistUpdateAlbumName_Clicked" CommandParameter="{Binding MusicModel}"/>
            </StackLayout>
        </Grid>
    </Grid>
</xct:Popup>